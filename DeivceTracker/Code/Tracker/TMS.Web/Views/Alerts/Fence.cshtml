@model TMS.Web.Models.ViewModels.FenceAlert

@{
    Layout = null;
}

@{
    if (Model != null)
    {
        <div id="FenceAlertSettingContainer">
            @if (ViewBag.AlertWriteStatus != null)
            {
                if (ViewBag.AlertWriteStatus == "Success")
                {
                    <div class="alertSaveResponseMsg" style="padding: 10px;">
                        Saved successfully
                    </div>
                }
                else
                {
                    <div class="alertSaveResponseMsg" style="padding: 10px; color: #F00;">
                        Alert failed to save
                    </div>
                }
            }
            <div>
                <div class="row">
                    <div class="col-md-9">
                        <div class="box box-info">
                            <input id="pac-input" class="controls" type="text" placeholder="Search Box" style="position: absolute;top: 0px;z-index: 10;margin-top: 10px;height: 32px;margin-left: 115px;padding: 5px;min-width: 350px;">
                            <div id="fenceMapContainer" style="width : 100%; height: 450px;">

                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="box box-info">
                            <div class="box-header with-border">
                                <h3 class="box-title">Alert Setting</h3>
                            </div>
                            <div class="" style="position: relative;">
                                <div class="box-header with-border">
                                    <input type="hidden" name="Id" class="Id" id="Id" value="@Model.Id" />

                                    @if (Model.Points == null)
                                    {
                                        <input type="hidden" name="PointsStr" class="FenceList" value="" />
                                    }
                                    else
                                    {
                                        <input type="hidden" name="PointsStr" class="FenceList"
                                               value="@(string.Join(";", Model.Points.Select(m => "" + m.Lat + ", " + m.Lang + "").ToArray()))" />
                                    }

                                    <div class="">
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                                        </div>
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
                                        </div>
                                        <div class="form-group">
                                            <div class="radio">
                                                <label>
                                                    @Html.RadioButtonFor(m => m.FenceType, Tracker.Common.Model.DeviceAlarmType.FenceInAlarm)
                                                    Fence In
                                                </label>
                                            </div>
                                            <div class="radio">
                                                <label>
                                                    @Html.RadioButtonFor(m => m.FenceType, Tracker.Common.Model.DeviceAlarmType.FenceOutAlarm)
                                                    Fence Out
                                                </label>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="">
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(m => m.IsActive)
                                                        Is Active
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @if (Model.Id != 0)
                                    {
                                        @Ajax.ActionLink("Set Alert Receivers", "AlertReceivers", "Alerts", new { AlertId = Model.Id }, new AjaxOptions()
                                   {
                                       UpdateTargetId = "AlertScheduleReceiversAjaxUpdateId",
                                       InsertionMode = InsertionMode.Replace,
                                       HttpMethod = "GET",
                                       OnSuccess = "$('#AlertScheduleReceiversModal').modal();"
                                   }, new { @class = "btn btn-info pull-right" })
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="box box-info">
                            <div class="box-header with-border">
                                <h3 class="box-title">Device Activation</h3>
                            </div>
                            <div class="form-horizontal">
                                <div class="box-body">
                                    <div class="form-group">
                                        <div class="col-sm-10">
                                            @if (Model.Devices != null && Model.Devices.Count > 0)
                                            {
                                                for (int i = 0; i < Model.Devices.Count; i++)
                                                {
                                                    <div class="checkbox">
                                                        <label>
                                                            @Html.HiddenFor(m => Model.Devices[i].DeviceId)
                                                            @Html.HiddenFor(m => Model.Devices[i].VehicleId)
                                                            @Html.CheckBoxFor(m => Model.Devices[i].Checked)
                                                            @Model.Devices[i].VehicleId
                                                        </label>
                                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                <span style="color: #F00;">No devices are active</span>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="box-footer">
                    <button type="button" class="btn btn-info pull-right" onclick="fenceSaveProcess(this)">Save</button>
                </div>
            </div>
        </div>

        <script type="text/javascript">
            var poly;
            var map;

            function initMap() {
                map = new google.maps.Map(document.getElementById('fenceMapContainer'), {
                    zoom: 10,
                    center: { lat: 11.000849293365269, lng: 76.95716857910156 }  // Center the map on Chicago, USA.
                });

                poly = new google.maps.Polygon({
                    strokeColor: '#AA0000',
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: '#AAAAAA',
                    fillOpacity: 0.4
                });

                poly.setMap(map);

                // Create the search box and link it to the UI element.
                var input = document.getElementById('pac-input');
                var searchBox = new google.maps.places.SearchBox(input);
                //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);


                // Listen for the event fired when the user selects a prediction and retrieve
                // more details for that place.
                searchBox.addListener('places_changed', function () {
                    var places = searchBox.getPlaces();

                    if (places.length == 0) {
                        return;
                    }

                    // For each place, get the icon, name and location.
                    var bounds = new google.maps.LatLngBounds();
                    places.forEach(function (place) {
                        if (place.geometry.viewport) {
                            // Only geocodes have viewport.
                            bounds.union(place.geometry.viewport);
                        } else {
                            bounds.extend(place.geometry.location);
                        }
                    });
                    map.fitBounds(bounds);
                });

            }

            function deleteFenceInMap() {
                var path = poly.getPath();
                path.clear();
            }

            function fenceDuplicate() {
                var fASContainer = $("#FenceAlertSettingContainer");

                fASContainer.find("#Id").val(0);
                fASContainer.find("#Name").val(fASContainer.find("#Name").val() + "-Duplicate");
                fASContainer.find("#Description").val(fASContainer.find("#Description").val() + "-Duplicate");

                editFenceInMap();
            }

            function editFenceInMap() {
                poly.setDraggable(true);
                poly.setEditable(true);

                var fenceListEle = $(".FenceList")[0];
                var fenceList = $(fenceListEle).val().split(";");

                var bounds = new google.maps.LatLngBounds();

                var path = poly.getPath();
                path.clear();

                if (fenceList.length > 1) {
                    // Edit
                    fenceList.map(function (item) {
                        var itmArr = item.split(",");
                        var latLng = new google.maps.LatLng(parseFloat(itmArr[0]), parseFloat(itmArr[1]));
                        path.push(latLng);
                        bounds.extend(latLng);
                    });

                    map.fitBounds(bounds);
                }
                else {
                    // Create
                    google.maps.event.addListener(map, 'click', function (event) {
                        path.push(event.latLng);
                    });
                }
                google.maps.event.addListener(poly, 'click', function (edge) {
                    if (typeof (edge.vertex) !== "undefined") {
                        path.removeAt(edge.vertex);
                    }
                });
            }

            function fenceSaveProcess(ele) {
                generateFencePathToSave();
                $(ele).parents("form").submit();
            }

            function generateFencePathToSave() {
                var path = poly.getPath();

                var points = path.getArray().map(function (item) {
                    return item.lat() + ", " + item.lng();
                });

                var fenceListEleVal = points.join(";");

                var fenceListEle = $(".FenceList")[0];;
                $(fenceListEle).val(fenceListEleVal);
            }

            function removeMapClickListener() {
                google.maps.event.clearListeners(map, 'click');
            }

            $(document).ready(function () {
                try {
                    initMap();
                } catch (e) {

                }
            });

        </script>

    }
}