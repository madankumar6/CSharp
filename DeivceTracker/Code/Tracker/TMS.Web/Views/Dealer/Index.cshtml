@using TMS.Model
@using TMS.Web.Rules
@model IEnumerable<TMS.Web.Models.ViewModels.DealerViewModel>

<div class="bs-example container">
    <p>
        <button id="AddDealer" class="btn btn-primary collapsed" type="button" data-toggle="collapse" data-target="#AddDealerForm" aria-expanded="false" aria-controls="AddDealerForm">
            <i class="fa fa-plus"></i>
            Add Dealer
        </button>
        <button id="EditDealer" class="btn btn-default collapsed" type="button">
            <i class="fa fa-pencil"></i>
            Edit Dealer
        </button>
        <button id="DeleteDealer" class="btn btn-danger collapsed" type="button">
            <i class="fa fa-remove"></i>
            Delete Dealer
        </button>
    
    </p>
    <div class="collapse" id="AddDealerForm" aria-expanded="false" style="height: 0px;">
    </div>


    <!-- Modal for Editing a Dealer -->
    <div class="modal fade" id="EditDealerModal" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add / Edit Dealer</h4>
                </div>
                <div class="modal-body">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="SaveEditedDealer">Save changes</button>
                </div>
            </div>
        </div>
    </div>
</div>
@{
    var currentUser = Session["UserData"] as CustomPrincipalSerializeModel;

    if (Session["UserData"] is Admin)
    {
        @Html.Label("Distributor Code")
        var distributorList = ViewData["DistributorList"] as SelectList;
        @Html.DropDownList("distributorIdDD", distributorList,"Select a Distributor", new { @class = "form-control" })
    }
}
<table id="DealerTable" class="table table-striped table-bordered dt-responsive nowrap display select" cellspacing="0" width="100%">
    <thead>
        <tr>
            <th><input type="checkbox"></th>
            <th>@Html.DisplayNameFor(model => model.FirstName)</th>
            <th>@Html.DisplayNameFor(model => model.LastName)</th>
            <th>@Html.DisplayName("Dealer Code")</th>
            <th>@Html.DisplayNameFor(model => model.PhoneNo)</th>
            <th>@Html.DisplayNameFor(model => model.Email)</th>
        </tr>
    </thead>
</table>

@section scripts
{
    <script type="text/javascript">
        SetupToastr();

        $("#distributorIdDD").change(function () {
            table.ajax.reload();
        });
        var table;

        $(document).ready(function () {
            var rowsSelected = [];
            table = $('#DealerTable').DataTable({
                processing: true, //control the processing indicator while data is being loaded
                serverSide: true, //process data on server-side for performance reasons.
                info: true, //control table information display field.
                stateSave: true, //restore table state on page reload.
                lengthMenu: [[10, 20, 50, -1], [10, 20, 50, "All"]],
                ajax: {
                    "type": "GET",
                    "url": '@Url.Action("GetDealers", "Dealer")',
                    "contentType": 'application/json; charset=utf-8',
                    "data": function (dt) {
                        dt.distributorId = $('#distributorIdDD :selected').val();
                    }
                },
                columns: [
                    { "data": null, "orderable": false },
                    { "data": "FirstName", "orderable": true },
                    { "data": "LastName", "orderable": false },
                    { "data": "Username", "orderable": false },
                    { "data": "PhoneNo", "orderable": false },
                    { "data": "Email", "orderable": false }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        orderable: false,
                        searchable: false,
                        className: 'dt-body-center',
                        render: function (data, type, full, meta) {
                            return '<input type="checkbox">';
                        }
                    }
                ],
                select: {
                    style: 'multi'
                },
                order: 1,
                rowCallback: function (row, data, dataIndex) {
                    // Get row ID
                    var rowId = data[0];
                    // If row ID is in the list of selected row IDs
                    if ($.inArray(rowId, rowsSelected) !== -1) {
                        $(row).find('input[type="checkbox"]').prop('checked', true);
                        $(row).addClass('selected');
                    }
                }
            });

            // Handle row selection event
            $('#DealerTable').on('select.dt deselect.dt', function (e, api, type, items) {
                if (e.type === 'select') {
                    $('tr.selected input[type="checkbox"]', api.table().container()).prop('checked', true);
                } else {
                    $('tr:not(.selected) input[type="checkbox"]', api.table().container()).prop('checked', false);
                }

                // Update state of "Select all" control
                updateDataTableSelectAllCtrl(table);
            });

            // Handle click on "Select all" control
            $('#DealerTable thead').on('click', 'input[type="checkbox"]', function (e) {
                if (this.checked) {
                    table.rows({ page: 'current' }).select();
                } else {
                    table.rows({ page: 'current' }).deselect();
                }

                e.stopPropagation();
            });

            // Handle click on heading containing "Select all" control
            $('thead', table.table().container()).on('click', 'th:first-child', function (e) {
                $('input[type="checkbox"]', this).trigger('click');
            });

            // Handle table draw event
            $('#DealerTable').on('draw.dt', function () {
                // Update state of "Select all" control
                updateDataTableSelectAllCtrl(table);
            });
        });

        $('#AddDealer').click(function () {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("Edit", "Dealer")',
                data: null,
                success: function (data) {
                    $('.modal-body').html(data);
                    $("#EditDealerModal").modal();
                }
            });
        });

        $("#EditDealer").click(function () {
            var selectedRows = table.rows({ page: 'current', selected: true });
            if (selectedRows.count() !== 1) {
                alert("Please select a row to edit");
                return;
            }

            var dealer = table.rows({ selected: true }).data()[0]["UserId"];
            $.ajax({
                type: 'GET',
                url: '@Url.Action("Edit", "Dealer")',
                data: { 'dealerId': dealer },
                success: function (data) {
                    $('.modal-body').html(data);
                    $("#EditDealerModal").modal();
                }
            });
        });

        $("#SaveEditedDealer").click(function () {
            var formData = $("#EditDealerForm").serialize();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("Edit", "Dealer")',
                data: formData,
                success: function (data) {
                    if (data.Result === "Success") {
                        toastr.success("Updated successfully");
                        table.ajax.reload();
                        $("#EditDealerModal").modal('hide');
                    } else {
                        $('.modal-body').html(data);
                    }

                }
            });
        });

        $('#DeleteDealer').click(function () {
            var selectedRows = table.rows({ page: 'current', selected: true });
            if (selectedRows.count() < 1) {
                alert("Please select atleast one row");
                return;
            }
            var dealers = new Array();
            // Iterate over all selected rows
            table.rows({ selected: true }).every(function (index) {
                dealers.push(this.data()["UserId"]);
            });

            $.ajax({
                type: 'POST',
                url: '@Url.Action("Delete", "Dealer")',
                data: { 'dealers': dealers },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    if (data.Result === "Success") {
                        toastr.success("Deleted successfully");
                        table.ajax.reload();
                    } else {
                        toastr.error("Error occured");
                    }
                }
            });
        });
    </script>


}